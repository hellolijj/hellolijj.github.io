<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joshua&#39;s blog</title>
    <link>https://hellolijj.github.io/</link>
    <description>Recent content on Joshua&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 11 May 2019 15:45:20 +0800</lastBuildDate>
    
	<atom:link href="https://hellolijj.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What Does Daemon Do？</title>
      <link>https://hellolijj.github.io/post/k8s/what-does-daemon-do/what-does-daemon-do/</link>
      <pubDate>Sat, 11 May 2019 15:45:20 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/k8s/what-does-daemon-do/what-does-daemon-do/</guid>
      <description>pouch daemon 位于daemon这个包内。 type Daemon struct { config *config.Config containerStore *meta.Store // ctrdDaemon controls containerd process ctrdDaemon *supervisord.Daemon // ctrdClient is grpc client connecting to the containerd ctrdClient ctrd.APIClient containerMgr mgr.ContainerMgr systemMgr mgr.SystemMgr imageMgr mgr.ImageMgr volumeMgr mgr.VolumeMgr networkMgr mgr.NetworkMgr server server.Server containerPlugin hookplugins.ContainerPlugin imagePlugin hookplugins.ImagePlugin daemonPlugin hookplugins.DaemonPlugin volumePlugin hookplugins.VolumePlugin criPlugin hookplugins.CriPlugin apiPlugin hookplugins.APIPlugin eventsService *events.Events } pouch d</description>
    </item>
    
    <item>
      <title>What Happen Pouchd</title>
      <link>https://hellolijj.github.io/post/k8s/what-happen-pouchd/what-happen-pouchd/</link>
      <pubDate>Fri, 10 May 2019 17:07:11 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/k8s/what-happen-pouchd/what-happen-pouchd/</guid>
      <description>pouch 分为 客户端和服务端。服务端端启动 通过 pouchd 实现。可以使用如下参数： 参考：http://pouchcontainer.io/#/pouch/do</description>
    </item>
    
    <item>
      <title>Pouch Test Dev</title>
      <link>https://hellolijj.github.io/post/k8s/pouch-test-dev/</link>
      <pubDate>Fri, 10 May 2019 15:52:28 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/k8s/pouch-test-dev/</guid>
      <description>对于一个开源项目来说，了解它的测试流程，搭建测试环境是对理解代码有一定好处的。本文参照 pouch 测试文档，搭建测试环境，记录此过程中的一点思考。 pouch 测</description>
    </item>
    
    <item>
      <title>How to Merge Commits</title>
      <link>https://hellolijj.github.io/post/git/how-to-merge-commits/how-to-merge-commits/</link>
      <pubDate>Tue, 30 Apr 2019 20:06:14 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/git/how-to-merge-commits/how-to-merge-commits/</guid>
      <description>背景，做一个小demo，写了十几个commits ，其实最终只要上传一个commits就可以。 那么如何将这些commit 合并成一个commit</description>
    </item>
    
    <item>
      <title>Pouch First Touch</title>
      <link>https://hellolijj.github.io/post/k8s/pouch-first-touch/</link>
      <pubDate>Tue, 30 Apr 2019 16:19:41 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/k8s/pouch-first-touch/</guid>
      <description>看了亮哥的《docker源码分析》热情澎湃，但是自己远没有这个能力。自从上次被面试后，一改之前的学习表面，学习特性的态度。今天对着 pouch 开源项目</description>
    </item>
    
    <item>
      <title>Docker Element Knowledge</title>
      <link>https://hellolijj.github.io/post/k8s/docker-element-knowledge/docker-element-knowledge/</link>
      <pubDate>Mon, 29 Apr 2019 11:35:14 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/k8s/docker-element-knowledge/docker-element-knowledge/</guid>
      <description>@(1.1 kubernetes)[容器] &amp;gt; 大家都知道容器技术实际上就是运用了linux3.10版本以上的 cgroup、namespaces功能。那么</description>
    </item>
    
    <item>
      <title>Why Docker Was So Hot</title>
      <link>https://hellolijj.github.io/post/k8s/why-docker-so-hot/</link>
      <pubDate>Thu, 25 Apr 2019 16:45:32 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/k8s/why-docker-so-hot/</guid>
      <description>学习原文：https://time.geekbang.org/column/article/14254 这篇文章介绍了docker干掉 Cloud Fou</description>
    </item>
    
    <item>
      <title>带着问题去学习系列：《深入剖析kuberntes》</title>
      <link>https://hellolijj.github.io/post/k8s/why-k8s-be-no.1/</link>
      <pubDate>Thu, 25 Apr 2019 13:40:47 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/k8s/why-k8s-be-no.1/</guid>
      <description>原文：https://time.geekbang.org/column/article/14252 问题一：为什么kuberntes能打败do</description>
    </item>
    
    <item>
      <title>闲谈【听君一席话，胜读十年书】</title>
      <link>https://hellolijj.github.io/life/chat01/</link>
      <pubDate>Thu, 25 Apr 2019 10:42:13 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/life/chat01/</guid>
      <description>0 背景 如今是4月下旬，身边的同学大多都找到了实习工作，其中不乏去BAT等国内一线互联网公司的。这个时候，实验室才老师问我是否对阿里的pouc</description>
    </item>
    
    <item>
      <title>hugo 发布第一篇博客	</title>
      <link>https://hellolijj.github.io/post/hugo/start-first-blog/</link>
      <pubDate>Mon, 08 Apr 2019 09:40:03 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/hugo/start-first-blog/</guid>
      <description>按照网上大多数的博客，可以很快使用 hugo 创建一个个人博客静态网站。甚至支持自定义选择皮肤、上传至github，使用github的pages功能构</description>
    </item>
    
    <item>
      <title>Hugo构建静态网站</title>
      <link>https://hellolijj.github.io/post/hugo/hugo-install-website/</link>
      <pubDate>Tue, 09 Oct 2018 19:00:25 +0800</pubDate>
      
      <guid>https://hellolijj.github.io/post/hugo/hugo-install-website/</guid>
      <description>3.4.1 hugo构建静态网站 @(3.4 hugo)[blog, 个人网站] 一些资料汇总 hugo官方网站：https://gohugo.io hugo官方中文文档：http://ww</description>
    </item>
    
  </channel>
</rss>